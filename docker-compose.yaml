version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=spells
      - DB_SSLMODE=disable
    depends_on:
      - db
      - migrations
    volumes:
      - ./:/app
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=spells
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spells"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrations:
    image: postgres:15-alpine
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    environment:
      - PGHOST=localhost
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres123
      - PGDATABASE=spells
    command: >
      bash -c "
      while ! psql -c 'SELECT 1' >/dev/null 2>&1; do
        echo 'Waiting for database...';
        sleep 2;
      done;
      echo 'Applying migrations...';
      for f in /migrations/*.sql; do
        echo 'Applying $$f';
        psql -f $$f;
      done;
      echo 'Migrations completed!';
      "

volumes:
  postgres_data: